{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GitGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GitGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAwBA,OACI,8BAEG,sBAAMC,SArBO,SAACC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAef,SAEC,uBACIO,KAAM,OACNC,MAAST,EACTU,SA9Bc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAQF,GAHR,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OACI,sBAAKc,UAAW,yCAAhB,UACI,qBAAKC,IAAMf,EAAKgB,IAAMN,IACtB,4BAAIA,QCDHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAItB,ECJyB,SAACA,GAEzB,MAA0Bd,mBAAU,CAChCqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAlBAC,qBAAY,WAERxB,EAAQC,GACPwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAMtB,CAACpB,IAMGqB,EDrByBK,CAAa1B,GAAhCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAuCrB,OAEI,qCAEK,oBAAIJ,UAAY,yCAAhB,SAA0DhB,IAExDoB,GAAW,mBAAGJ,UAAY,wCAAf,qBAGlB,qBAAKA,UAAW,YAAhB,SAKYH,EAAOJ,KAAK,SAAAC,GACR,OAAO,cAAC,EAAD,eAEHA,GADGA,EAAIC,aElBpBgB,EA3CM,WAGjB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAeA,OACI,qCAEI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAKA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GACX,OAAO,cAAC,EAAD,CAEHA,SAAYA,GADLA,Y,MCtBnC6B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e7c0ff48.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSumit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 0) {\r\n            \r\n            setCategories(cats => [inputValue,...cats])\r\n            setinputValue('');\r\n        }\r\n\r\n        \r\n        \r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n           <form onSubmit = {handleSumit}>\r\n\r\n            <input \r\n                type= \"Text\"\r\n                value = {inputValue}\r\n                onChange = { handleInputChange }\r\n            />\r\n           </form>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n\r\n\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category) }&limit=10&api_key=95JXE3HT24igZZNrE24mLQqOdPfxBuoY`\r\n    const resp = await fetch ( url );\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n\r\n    return gifs;\r\n\r\n\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GitGridItem = ({id, title, url}) => {\r\n\r\n    // console.log(id, title, url)\r\n    return (\r\n        <div className= \"card animate__animated animate__fadeIn\">\r\n            <img src ={url} alt= {title}/>\r\n            <p>{title}</p>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GitGridItem } from './GitGridItem';\r\n\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n   const { data: images, loading }= useFetchGifs(category);\r\n   \r\n\r\n\r\n    // const [count, setcount] = useState(0);\r\n    \r\n    //Cuando vemos esto es porque quiero que se ejecute esta instruccion\r\n    // cuando el componente es renderizado por primera vez\r\n    \r\n    // useEffect ( ( )=> {\r\n    //     getGifs(category)\r\n    //         .then (imgs => setImages(imgs))\r\n    // }, [ category ]);\r\n\r\n    // const getGifs = async () => {\r\n\r\n    //     const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category) }&limit=10&api_key=95JXE3HT24igZZNrE24mLQqOdPfxBuoY`\r\n    //     const resp = await fetch ( url );\r\n    //     const {data} = await resp.json();\r\n    //     const gifs = data.map(img => {\r\n    //         return {\r\n    //             id: img.id,\r\n    //             title: img.title,\r\n    //             url: img.images?.downsized_medium.url\r\n    //         }\r\n    //     })\r\n\r\n\r\n    //     console.log(gifs);\r\n    //     setImages(gifs);\r\n\r\n\r\n        \r\n    // }\r\n\r\n    // getGifs();\r\n\r\n\r\n\r\n    return (\r\n\r\n        <> \r\n\r\n             <h3 className = \"card animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n             { loading && <p className = \"card animate__animated animate__flash\">Loading</p>}\r\n\r\n            \r\n        <div className= \"card-grid\">\r\n\r\n            \r\n                \r\n                {\r\n                    images.map (img => {\r\n                        return <GitGridItem \r\n                        key = {img.id} \r\n                        {...img}\r\n                        />\r\n                    })\r\n                } \r\n            \r\n            \r\n            \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\n\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState( {\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect ( () => {\r\n\r\n        getGifs(category)\r\n        .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n\r\n        });\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n   \r\n\r\n    return state; //{data: [] , loading: true}\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n        \r\n    // }\r\n\r\n    // const handleAdd = () => {\r\n\r\n    //     setCategories(cate => ['Angelica',...cate] )\r\n    //     // setCategories ([...categories, 'Pedro', ])\r\n        \r\n    // }\r\n        \r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories= {setCategories}/>\r\n            <hr/>\r\n\r\n\r\n        \r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => {\r\n                        return <GifGrid \r\n                            key = {category}                        \r\n                            category = {category}/>\r\n                    })\r\n                }\r\n            \r\n            </ol>\r\n                    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n\r\n// GifExpertApp = () => {\r\n\r\n//     return (  \r\n\r\n//         <div>\r\n//             <h2>GifExpertApp</h2>\r\n//         </div>\r\n         \r\n    \r\n//     )\r\n\r\n    \r\n\r\n// }\r\n\r\n// export default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\n\nimport './index.css';\n\n\n\n\n\n\n\n\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}